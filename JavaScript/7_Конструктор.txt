КОНСТРУКТОРЫ

Конструктор - функция, создающая объект.
    Существует 2 соглашения:
        - конструктор вызывается оператором new
        - имя конструктора начинается с заглавной буквы

            let user = new User('Вася')

    При вызове конструктора происходит следующее:

        - создается новый пустой объект
        - к this присваивается этот новый объект
        - выполняетя код функции (как правило, он добавляет новые свойтсва)
        - возвращается значение this

            function User(name) {

                //this = {}; (неявно)

                //добавляет свойтсва к this
                this.name = name;
                this.isAdmin = false;

                //return this; (неявно)

            }

    Конструктор удобно переиспользовать. К примеру, чтобы создать много пользователей.
    Это намного удобнее, чем использовать литерал.

Наличие return

    - если есть пустой return, возвращается this
        function SmallUser() {

            this.name = "Вася";

            return;  // <-- возвращает this
        }

    - если return содержит объект, то возвращается объект
        function BigUser() {

            this.name = "Вася";

            return { name: "Godzilla" };  // <-- возвращает этот объект
        }

Создание методов.

    Помимо свойств, в конструкторе могут быть созданы методы.

        function User(name) {
            this.name = name;

            this.sayHi: function() {
                console.log('Меня зовут ' + this.name);
            }

        }

        let user = new User('Вася');
        vasya.sayHi(); // Меня зовут Вася