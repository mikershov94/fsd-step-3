ОБЪЕКТЫ В JAVASCRIPT

Объект - тип данных, используемый для хранения коллекции различный значений
    и более сложных сущностей.

Создание.
    Объект создается с использованием одного из варианта синтаксиса:

        let user = new Object(); //конструктор объекта
        let user = {};          //литерал объекта

В объекте содержится необязательный список свойств.
Свойство - это пара "ключ: значение", где
    ключ - строка (имя свойства),
    значение - может быть любым типом данных. (всего их 8)

Именем свойство может быть любое слово. Даже если это число, оно будет преобразовано в строку.
Можно использовать даже ключевые слова (for, let, if).
Исклчением является только ключ .__proto__

Свойство (или элемент в списке) мы можем найти по ключу.
Чтобы обратиться к свойству используется синтаксис через точку "объект.свойство"

    let user = {};

    user.name = 'John';
    user.age = 30;
    user.isAdmin = true;

В случае если ключ свойства является переменной, то используются квадратные скобки.

    let key = "liked birds";

    user[key] = false;



Удаление свойства.
    Для удаления свойтсва используется синтаксис.

        delete user.age;

Вычисляемые свойства.
    Мы можем использовать квадратные скобки для задания вычисляемых свойств

        let fruit = promt("Какой фрукт купить?", "apple"); //ожидаем ввода ключа

        let bag = {};
        bag[fruit] = 5

        или более сложное

        let fruit = 'apple'
        let bag = {
            [fruit + 'Computer']: 2,  //bag.appleComputer
        }

Присвоение свойств.

    К свойствам, как правило, присваивают не голые значения, а значение переменных.

        function makeUser(name, age) {
            return {
                name: name,
                age: age,
            };
        }

        let user = makeUser('John', 30);
        alert(user.name);

    В случае, если ключ свойтсва совпадает с именем переменной,
    то можно использовать сокращенный вариант:

        function makeUser(name, age) {
            return {
                name,
                age,
            };
        }




