СТРОКИ

1. Кавычки
    Строку можно создать с помощью кавычек.

        let single = 'single-quoted';
        let double = "double-quoted";

        let backticks = `backticks`;

    Использование обратных кавычек дает преимущества.

        - вставка произвольных выражений
            console.log(`1 + 2 = ${sum(1, 2)}.`)    //1 + 2 = 3

        - строка может занимать более одной СТРОКИ
            let guestList = `Guests:
                            * John
                            * Pete
                            * Mary
                            `;
    
2. Спецсимволы

    \n  -   перевод строки
    \r  -   возврат каретки. Самостоятельно не используется. Можно \r\n
    \'  -   одинарные кавычки
    \"  -   двойные кавычки
    \\  -   обратный слэш
    \t  -   знак табуляции
    \uXXXX  -   символ в кодировке UTF-16
    \u{X...XXXX} - символ в кодировке UTF-32, до 6 шестнадцатиричных цифр

3. Длина строки

    .length - свойство, в котором хранится длина строки

4. Доступ к символам

    - обратиться к символу, который занимает позицию pos, можно с помощью квадратных скобок [pos]
        (предпочтительный способ)

        let str = 'Hello'

        console.log(str[0]) //H

    - метод charAt(pos)

        console.log(str.charAt(0)) //H

5. Строки неизменяемы.

    Как только строка создана - она неизменяема

    Можно создавать измененные копии, но оригинал неизменяем

6. Изменение регистра

    - метод .toLowerCase() изменяет все символы строки в нижний регистр

    - метод .toUpperCase() изменяет все символы строки в верхний регистр

7. Поиск подстроки

    - метод .indexOf(substr, pos)
        ищет подстроку substr в строке начиная с позиции pos
        возвращает позицию подстроки, либо -1

    - метод .lastIndexOf(substr, pos)
        работает также, но ищет с конца строки

        Чтобы сделать проверку .indexOf() компактнее применяют побитовый оператор не

            if (~str.indexOf(substr, pos)) {    //если найдено

            }

        Но лучше не использовать возможности языка неочевидным образом

    - метод .includes(substr, pos)
        возвращает true если строка есть и false если нет
        pos - необязательный аргумент

    - метод .startsWith(substr)
        проверяет начинается ли строка с переданной подстроки

    - метод .endsWith(substr)
        проверяет заканчивается ли строка данной подстрокой

8. Получение подстроки

    - метод .slice(start, end)
        возвращает подстроку найденную на позиции от start до end (не включая)
        end - необязательный параметр
        для start и end могут быть отрицательные значения

    - метод .substring(start, end)
        возвращает подстроку найденную на позиции от start до end (включая)
        end - необязательный параметр
        start может быть больше end (вернет пустую строку)

    - метод .substr(start, length)
        возвращает подстроку найденную на позиции от start длиной length
        length - необязательный параметр

9. Сравнение строки

    - строчные буквы больше заглавных
    - диакритические знаки идут не по порядку

    В JavaScript строки кодируются в UTF-16

    Узнать код символа  - str.codePointAt(pos)

    Правильно выполнять проверку str1.localCompare(str2)
        возвращает:
            - 0 если строки равны
            - отрицательное число если str1 < str2
            - положительное число если str1 > str2